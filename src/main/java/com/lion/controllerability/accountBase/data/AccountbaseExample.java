package com.lion.controllerability.accountBase.data;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AccountbaseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    public AccountbaseExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAccountidIsNull() {
            addCriterion("AccountId is null");
            return (Criteria) this;
        }

        public Criteria andAccountidIsNotNull() {
            addCriterion("AccountId is not null");
            return (Criteria) this;
        }

        public Criteria andAccountidEqualTo(Long value) {
            addCriterion("AccountId =", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidNotEqualTo(Long value) {
            addCriterion("AccountId <>", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidGreaterThan(Long value) {
            addCriterion("AccountId >", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidGreaterThanOrEqualTo(Long value) {
            addCriterion("AccountId >=", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidLessThan(Long value) {
            addCriterion("AccountId <", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidLessThanOrEqualTo(Long value) {
            addCriterion("AccountId <=", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidIn(List<Long> values) {
            addCriterion("AccountId in", values, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidNotIn(List<Long> values) {
            addCriterion("AccountId not in", values, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidBetween(Long value1, Long value2) {
            addCriterion("AccountId between", value1, value2, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidNotBetween(Long value1, Long value2) {
            addCriterion("AccountId not between", value1, value2, "accountid");
            return (Criteria) this;
        }

        public Criteria andPositionidIsNull() {
            addCriterion("PositionId is null");
            return (Criteria) this;
        }

        public Criteria andPositionidIsNotNull() {
            addCriterion("PositionId is not null");
            return (Criteria) this;
        }

        public Criteria andPositionidEqualTo(Long value) {
            addCriterion("PositionId =", value, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidNotEqualTo(Long value) {
            addCriterion("PositionId <>", value, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidGreaterThan(Long value) {
            addCriterion("PositionId >", value, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidGreaterThanOrEqualTo(Long value) {
            addCriterion("PositionId >=", value, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidLessThan(Long value) {
            addCriterion("PositionId <", value, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidLessThanOrEqualTo(Long value) {
            addCriterion("PositionId <=", value, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidIn(List<Long> values) {
            addCriterion("PositionId in", values, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidNotIn(List<Long> values) {
            addCriterion("PositionId not in", values, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidBetween(Long value1, Long value2) {
            addCriterion("PositionId between", value1, value2, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidNotBetween(Long value1, Long value2) {
            addCriterion("PositionId not between", value1, value2, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositiontypeflagIsNull() {
            addCriterion("PositionTypeFlag is null");
            return (Criteria) this;
        }

        public Criteria andPositiontypeflagIsNotNull() {
            addCriterion("PositionTypeFlag is not null");
            return (Criteria) this;
        }

        public Criteria andPositiontypeflagEqualTo(Byte value) {
            addCriterion("PositionTypeFlag =", value, "positiontypeflag");
            return (Criteria) this;
        }

        public Criteria andPositiontypeflagNotEqualTo(Byte value) {
            addCriterion("PositionTypeFlag <>", value, "positiontypeflag");
            return (Criteria) this;
        }

        public Criteria andPositiontypeflagGreaterThan(Byte value) {
            addCriterion("PositionTypeFlag >", value, "positiontypeflag");
            return (Criteria) this;
        }

        public Criteria andPositiontypeflagGreaterThanOrEqualTo(Byte value) {
            addCriterion("PositionTypeFlag >=", value, "positiontypeflag");
            return (Criteria) this;
        }

        public Criteria andPositiontypeflagLessThan(Byte value) {
            addCriterion("PositionTypeFlag <", value, "positiontypeflag");
            return (Criteria) this;
        }

        public Criteria andPositiontypeflagLessThanOrEqualTo(Byte value) {
            addCriterion("PositionTypeFlag <=", value, "positiontypeflag");
            return (Criteria) this;
        }

        public Criteria andPositiontypeflagIn(List<Byte> values) {
            addCriterion("PositionTypeFlag in", values, "positiontypeflag");
            return (Criteria) this;
        }

        public Criteria andPositiontypeflagNotIn(List<Byte> values) {
            addCriterion("PositionTypeFlag not in", values, "positiontypeflag");
            return (Criteria) this;
        }

        public Criteria andPositiontypeflagBetween(Byte value1, Byte value2) {
            addCriterion("PositionTypeFlag between", value1, value2, "positiontypeflag");
            return (Criteria) this;
        }

        public Criteria andPositiontypeflagNotBetween(Byte value1, Byte value2) {
            addCriterion("PositionTypeFlag not between", value1, value2, "positiontypeflag");
            return (Criteria) this;
        }

        public Criteria andAccountnoIsNull() {
            addCriterion("AccountNo is null");
            return (Criteria) this;
        }

        public Criteria andAccountnoIsNotNull() {
            addCriterion("AccountNo is not null");
            return (Criteria) this;
        }

        public Criteria andAccountnoEqualTo(String value) {
            addCriterion("AccountNo =", value, "accountno");
            return (Criteria) this;
        }

        public Criteria andAccountnoNotEqualTo(String value) {
            addCriterion("AccountNo <>", value, "accountno");
            return (Criteria) this;
        }

        public Criteria andAccountnoGreaterThan(String value) {
            addCriterion("AccountNo >", value, "accountno");
            return (Criteria) this;
        }

        public Criteria andAccountnoGreaterThanOrEqualTo(String value) {
            addCriterion("AccountNo >=", value, "accountno");
            return (Criteria) this;
        }

        public Criteria andAccountnoLessThan(String value) {
            addCriterion("AccountNo <", value, "accountno");
            return (Criteria) this;
        }

        public Criteria andAccountnoLessThanOrEqualTo(String value) {
            addCriterion("AccountNo <=", value, "accountno");
            return (Criteria) this;
        }

        public Criteria andAccountnoLike(String value) {
            addCriterion("AccountNo like", value, "accountno");
            return (Criteria) this;
        }

        public Criteria andAccountnoNotLike(String value) {
            addCriterion("AccountNo not like", value, "accountno");
            return (Criteria) this;
        }

        public Criteria andAccountnoIn(List<String> values) {
            addCriterion("AccountNo in", values, "accountno");
            return (Criteria) this;
        }

        public Criteria andAccountnoNotIn(List<String> values) {
            addCriterion("AccountNo not in", values, "accountno");
            return (Criteria) this;
        }

        public Criteria andAccountnoBetween(String value1, String value2) {
            addCriterion("AccountNo between", value1, value2, "accountno");
            return (Criteria) this;
        }

        public Criteria andAccountnoNotBetween(String value1, String value2) {
            addCriterion("AccountNo not between", value1, value2, "accountno");
            return (Criteria) this;
        }

        public Criteria andUsertypeflagIsNull() {
            addCriterion("UserTypeFlag is null");
            return (Criteria) this;
        }

        public Criteria andUsertypeflagIsNotNull() {
            addCriterion("UserTypeFlag is not null");
            return (Criteria) this;
        }

        public Criteria andUsertypeflagEqualTo(Byte value) {
            addCriterion("UserTypeFlag =", value, "usertypeflag");
            return (Criteria) this;
        }

        public Criteria andUsertypeflagNotEqualTo(Byte value) {
            addCriterion("UserTypeFlag <>", value, "usertypeflag");
            return (Criteria) this;
        }

        public Criteria andUsertypeflagGreaterThan(Byte value) {
            addCriterion("UserTypeFlag >", value, "usertypeflag");
            return (Criteria) this;
        }

        public Criteria andUsertypeflagGreaterThanOrEqualTo(Byte value) {
            addCriterion("UserTypeFlag >=", value, "usertypeflag");
            return (Criteria) this;
        }

        public Criteria andUsertypeflagLessThan(Byte value) {
            addCriterion("UserTypeFlag <", value, "usertypeflag");
            return (Criteria) this;
        }

        public Criteria andUsertypeflagLessThanOrEqualTo(Byte value) {
            addCriterion("UserTypeFlag <=", value, "usertypeflag");
            return (Criteria) this;
        }

        public Criteria andUsertypeflagIn(List<Byte> values) {
            addCriterion("UserTypeFlag in", values, "usertypeflag");
            return (Criteria) this;
        }

        public Criteria andUsertypeflagNotIn(List<Byte> values) {
            addCriterion("UserTypeFlag not in", values, "usertypeflag");
            return (Criteria) this;
        }

        public Criteria andUsertypeflagBetween(Byte value1, Byte value2) {
            addCriterion("UserTypeFlag between", value1, value2, "usertypeflag");
            return (Criteria) this;
        }

        public Criteria andUsertypeflagNotBetween(Byte value1, Byte value2) {
            addCriterion("UserTypeFlag not between", value1, value2, "usertypeflag");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("CreateTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("CreateTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("CreateTime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("CreateTime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("CreateTime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CreateTime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("CreateTime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("CreateTime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("CreateTime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("CreateTime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("CreateTime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("CreateTime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andActiveflagIsNull() {
            addCriterion("ActiveFlag is null");
            return (Criteria) this;
        }

        public Criteria andActiveflagIsNotNull() {
            addCriterion("ActiveFlag is not null");
            return (Criteria) this;
        }

        public Criteria andActiveflagEqualTo(Byte value) {
            addCriterion("ActiveFlag =", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagNotEqualTo(Byte value) {
            addCriterion("ActiveFlag <>", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagGreaterThan(Byte value) {
            addCriterion("ActiveFlag >", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagGreaterThanOrEqualTo(Byte value) {
            addCriterion("ActiveFlag >=", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagLessThan(Byte value) {
            addCriterion("ActiveFlag <", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagLessThanOrEqualTo(Byte value) {
            addCriterion("ActiveFlag <=", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagIn(List<Byte> values) {
            addCriterion("ActiveFlag in", values, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagNotIn(List<Byte> values) {
            addCriterion("ActiveFlag not in", values, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagBetween(Byte value1, Byte value2) {
            addCriterion("ActiveFlag between", value1, value2, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagNotBetween(Byte value1, Byte value2) {
            addCriterion("ActiveFlag not between", value1, value2, "activeflag");
            return (Criteria) this;
        }

        public Criteria andLeftmoneyIsNull() {
            addCriterion("LeftMoney is null");
            return (Criteria) this;
        }

        public Criteria andLeftmoneyIsNotNull() {
            addCriterion("LeftMoney is not null");
            return (Criteria) this;
        }

        public Criteria andLeftmoneyEqualTo(Long value) {
            addCriterion("LeftMoney =", value, "leftmoney");
            return (Criteria) this;
        }

        public Criteria andLeftmoneyNotEqualTo(Long value) {
            addCriterion("LeftMoney <>", value, "leftmoney");
            return (Criteria) this;
        }

        public Criteria andLeftmoneyGreaterThan(Long value) {
            addCriterion("LeftMoney >", value, "leftmoney");
            return (Criteria) this;
        }

        public Criteria andLeftmoneyGreaterThanOrEqualTo(Long value) {
            addCriterion("LeftMoney >=", value, "leftmoney");
            return (Criteria) this;
        }

        public Criteria andLeftmoneyLessThan(Long value) {
            addCriterion("LeftMoney <", value, "leftmoney");
            return (Criteria) this;
        }

        public Criteria andLeftmoneyLessThanOrEqualTo(Long value) {
            addCriterion("LeftMoney <=", value, "leftmoney");
            return (Criteria) this;
        }

        public Criteria andLeftmoneyIn(List<Long> values) {
            addCriterion("LeftMoney in", values, "leftmoney");
            return (Criteria) this;
        }

        public Criteria andLeftmoneyNotIn(List<Long> values) {
            addCriterion("LeftMoney not in", values, "leftmoney");
            return (Criteria) this;
        }

        public Criteria andLeftmoneyBetween(Long value1, Long value2) {
            addCriterion("LeftMoney between", value1, value2, "leftmoney");
            return (Criteria) this;
        }

        public Criteria andLeftmoneyNotBetween(Long value1, Long value2) {
            addCriterion("LeftMoney not between", value1, value2, "leftmoney");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeIsNull() {
            addCriterion("AccountTypeCode is null");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeIsNotNull() {
            addCriterion("AccountTypeCode is not null");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeEqualTo(String value) {
            addCriterion("AccountTypeCode =", value, "accounttypecode");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeNotEqualTo(String value) {
            addCriterion("AccountTypeCode <>", value, "accounttypecode");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeGreaterThan(String value) {
            addCriterion("AccountTypeCode >", value, "accounttypecode");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeGreaterThanOrEqualTo(String value) {
            addCriterion("AccountTypeCode >=", value, "accounttypecode");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeLessThan(String value) {
            addCriterion("AccountTypeCode <", value, "accounttypecode");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeLessThanOrEqualTo(String value) {
            addCriterion("AccountTypeCode <=", value, "accounttypecode");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeLike(String value) {
            addCriterion("AccountTypeCode like", value, "accounttypecode");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeNotLike(String value) {
            addCriterion("AccountTypeCode not like", value, "accounttypecode");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeIn(List<String> values) {
            addCriterion("AccountTypeCode in", values, "accounttypecode");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeNotIn(List<String> values) {
            addCriterion("AccountTypeCode not in", values, "accounttypecode");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeBetween(String value1, String value2) {
            addCriterion("AccountTypeCode between", value1, value2, "accounttypecode");
            return (Criteria) this;
        }

        public Criteria andAccounttypecodeNotBetween(String value1, String value2) {
            addCriterion("AccountTypeCode not between", value1, value2, "accounttypecode");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AccountBase
     *
     * @mbggenerated do_not_delete_during_merge Sun Mar 08 10:33:11 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AccountBase
     *
     * @mbggenerated Sun Mar 08 10:33:11 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}