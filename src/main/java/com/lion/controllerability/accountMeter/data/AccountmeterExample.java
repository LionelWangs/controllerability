package com.lion.controllerability.accountMeter.data;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AccountmeterExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    public AccountmeterExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("Id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("Id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("Id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("Id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("Id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("Id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("Id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("Id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("Id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("Id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("Id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("Id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAccountidIsNull() {
            addCriterion("AccountId is null");
            return (Criteria) this;
        }

        public Criteria andAccountidIsNotNull() {
            addCriterion("AccountId is not null");
            return (Criteria) this;
        }

        public Criteria andAccountidEqualTo(Long value) {
            addCriterion("AccountId =", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidNotEqualTo(Long value) {
            addCriterion("AccountId <>", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidGreaterThan(Long value) {
            addCriterion("AccountId >", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidGreaterThanOrEqualTo(Long value) {
            addCriterion("AccountId >=", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidLessThan(Long value) {
            addCriterion("AccountId <", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidLessThanOrEqualTo(Long value) {
            addCriterion("AccountId <=", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidIn(List<Long> values) {
            addCriterion("AccountId in", values, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidNotIn(List<Long> values) {
            addCriterion("AccountId not in", values, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidBetween(Long value1, Long value2) {
            addCriterion("AccountId between", value1, value2, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidNotBetween(Long value1, Long value2) {
            addCriterion("AccountId not between", value1, value2, "accountid");
            return (Criteria) this;
        }

        public Criteria andMeteridIsNull() {
            addCriterion("MeterId is null");
            return (Criteria) this;
        }

        public Criteria andMeteridIsNotNull() {
            addCriterion("MeterId is not null");
            return (Criteria) this;
        }

        public Criteria andMeteridEqualTo(Long value) {
            addCriterion("MeterId =", value, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridNotEqualTo(Long value) {
            addCriterion("MeterId <>", value, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridGreaterThan(Long value) {
            addCriterion("MeterId >", value, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridGreaterThanOrEqualTo(Long value) {
            addCriterion("MeterId >=", value, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridLessThan(Long value) {
            addCriterion("MeterId <", value, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridLessThanOrEqualTo(Long value) {
            addCriterion("MeterId <=", value, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridIn(List<Long> values) {
            addCriterion("MeterId in", values, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridNotIn(List<Long> values) {
            addCriterion("MeterId not in", values, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridBetween(Long value1, Long value2) {
            addCriterion("MeterId between", value1, value2, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridNotBetween(Long value1, Long value2) {
            addCriterion("MeterId not between", value1, value2, "meterid");
            return (Criteria) this;
        }

        public Criteria andBindtimeIsNull() {
            addCriterion("BindTime is null");
            return (Criteria) this;
        }

        public Criteria andBindtimeIsNotNull() {
            addCriterion("BindTime is not null");
            return (Criteria) this;
        }

        public Criteria andBindtimeEqualTo(Date value) {
            addCriterion("BindTime =", value, "bindtime");
            return (Criteria) this;
        }

        public Criteria andBindtimeNotEqualTo(Date value) {
            addCriterion("BindTime <>", value, "bindtime");
            return (Criteria) this;
        }

        public Criteria andBindtimeGreaterThan(Date value) {
            addCriterion("BindTime >", value, "bindtime");
            return (Criteria) this;
        }

        public Criteria andBindtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("BindTime >=", value, "bindtime");
            return (Criteria) this;
        }

        public Criteria andBindtimeLessThan(Date value) {
            addCriterion("BindTime <", value, "bindtime");
            return (Criteria) this;
        }

        public Criteria andBindtimeLessThanOrEqualTo(Date value) {
            addCriterion("BindTime <=", value, "bindtime");
            return (Criteria) this;
        }

        public Criteria andBindtimeIn(List<Date> values) {
            addCriterion("BindTime in", values, "bindtime");
            return (Criteria) this;
        }

        public Criteria andBindtimeNotIn(List<Date> values) {
            addCriterion("BindTime not in", values, "bindtime");
            return (Criteria) this;
        }

        public Criteria andBindtimeBetween(Date value1, Date value2) {
            addCriterion("BindTime between", value1, value2, "bindtime");
            return (Criteria) this;
        }

        public Criteria andBindtimeNotBetween(Date value1, Date value2) {
            addCriterion("BindTime not between", value1, value2, "bindtime");
            return (Criteria) this;
        }

        public Criteria andBegindigitIsNull() {
            addCriterion("BeginDigit is null");
            return (Criteria) this;
        }

        public Criteria andBegindigitIsNotNull() {
            addCriterion("BeginDigit is not null");
            return (Criteria) this;
        }

        public Criteria andBegindigitEqualTo(Double value) {
            addCriterion("BeginDigit =", value, "begindigit");
            return (Criteria) this;
        }

        public Criteria andBegindigitNotEqualTo(Double value) {
            addCriterion("BeginDigit <>", value, "begindigit");
            return (Criteria) this;
        }

        public Criteria andBegindigitGreaterThan(Double value) {
            addCriterion("BeginDigit >", value, "begindigit");
            return (Criteria) this;
        }

        public Criteria andBegindigitGreaterThanOrEqualTo(Double value) {
            addCriterion("BeginDigit >=", value, "begindigit");
            return (Criteria) this;
        }

        public Criteria andBegindigitLessThan(Double value) {
            addCriterion("BeginDigit <", value, "begindigit");
            return (Criteria) this;
        }

        public Criteria andBegindigitLessThanOrEqualTo(Double value) {
            addCriterion("BeginDigit <=", value, "begindigit");
            return (Criteria) this;
        }

        public Criteria andBegindigitIn(List<Double> values) {
            addCriterion("BeginDigit in", values, "begindigit");
            return (Criteria) this;
        }

        public Criteria andBegindigitNotIn(List<Double> values) {
            addCriterion("BeginDigit not in", values, "begindigit");
            return (Criteria) this;
        }

        public Criteria andBegindigitBetween(Double value1, Double value2) {
            addCriterion("BeginDigit between", value1, value2, "begindigit");
            return (Criteria) this;
        }

        public Criteria andBegindigitNotBetween(Double value1, Double value2) {
            addCriterion("BeginDigit not between", value1, value2, "begindigit");
            return (Criteria) this;
        }

        public Criteria andActiveflagIsNull() {
            addCriterion("ActiveFlag is null");
            return (Criteria) this;
        }

        public Criteria andActiveflagIsNotNull() {
            addCriterion("ActiveFlag is not null");
            return (Criteria) this;
        }

        public Criteria andActiveflagEqualTo(Byte value) {
            addCriterion("ActiveFlag =", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagNotEqualTo(Byte value) {
            addCriterion("ActiveFlag <>", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagGreaterThan(Byte value) {
            addCriterion("ActiveFlag >", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagGreaterThanOrEqualTo(Byte value) {
            addCriterion("ActiveFlag >=", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagLessThan(Byte value) {
            addCriterion("ActiveFlag <", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagLessThanOrEqualTo(Byte value) {
            addCriterion("ActiveFlag <=", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagIn(List<Byte> values) {
            addCriterion("ActiveFlag in", values, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagNotIn(List<Byte> values) {
            addCriterion("ActiveFlag not in", values, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagBetween(Byte value1, Byte value2) {
            addCriterion("ActiveFlag between", value1, value2, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagNotBetween(Byte value1, Byte value2) {
            addCriterion("ActiveFlag not between", value1, value2, "activeflag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AccountMeter
     *
     * @mbggenerated do_not_delete_during_merge Wed Mar 18 12:27:57 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AccountMeter
     *
     * @mbggenerated Wed Mar 18 12:27:57 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}