package com.lion.controllerability.basisposition.data;

import java.util.ArrayList;
import java.util.List;

public class BasispositionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    public BasispositionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPositionidIsNull() {
            addCriterion("PositionId is null");
            return (Criteria) this;
        }

        public Criteria andPositionidIsNotNull() {
            addCriterion("PositionId is not null");
            return (Criteria) this;
        }

        public Criteria andPositionidEqualTo(Long value) {
            addCriterion("PositionId =", value, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidNotEqualTo(Long value) {
            addCriterion("PositionId <>", value, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidGreaterThan(Long value) {
            addCriterion("PositionId >", value, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidGreaterThanOrEqualTo(Long value) {
            addCriterion("PositionId >=", value, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidLessThan(Long value) {
            addCriterion("PositionId <", value, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidLessThanOrEqualTo(Long value) {
            addCriterion("PositionId <=", value, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidIn(List<Long> values) {
            addCriterion("PositionId in", values, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidNotIn(List<Long> values) {
            addCriterion("PositionId not in", values, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidBetween(Long value1, Long value2) {
            addCriterion("PositionId between", value1, value2, "positionid");
            return (Criteria) this;
        }

        public Criteria andPositionidNotBetween(Long value1, Long value2) {
            addCriterion("PositionId not between", value1, value2, "positionid");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeIsNull() {
            addCriterion("DistrictCode is null");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeIsNotNull() {
            addCriterion("DistrictCode is not null");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeEqualTo(String value) {
            addCriterion("DistrictCode =", value, "districtcode");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeNotEqualTo(String value) {
            addCriterion("DistrictCode <>", value, "districtcode");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeGreaterThan(String value) {
            addCriterion("DistrictCode >", value, "districtcode");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeGreaterThanOrEqualTo(String value) {
            addCriterion("DistrictCode >=", value, "districtcode");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeLessThan(String value) {
            addCriterion("DistrictCode <", value, "districtcode");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeLessThanOrEqualTo(String value) {
            addCriterion("DistrictCode <=", value, "districtcode");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeLike(String value) {
            addCriterion("DistrictCode like", value, "districtcode");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeNotLike(String value) {
            addCriterion("DistrictCode not like", value, "districtcode");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeIn(List<String> values) {
            addCriterion("DistrictCode in", values, "districtcode");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeNotIn(List<String> values) {
            addCriterion("DistrictCode not in", values, "districtcode");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeBetween(String value1, String value2) {
            addCriterion("DistrictCode between", value1, value2, "districtcode");
            return (Criteria) this;
        }

        public Criteria andDistrictcodeNotBetween(String value1, String value2) {
            addCriterion("DistrictCode not between", value1, value2, "districtcode");
            return (Criteria) this;
        }

        public Criteria andParentidIsNull() {
            addCriterion("ParentId is null");
            return (Criteria) this;
        }

        public Criteria andParentidIsNotNull() {
            addCriterion("ParentId is not null");
            return (Criteria) this;
        }

        public Criteria andParentidEqualTo(Long value) {
            addCriterion("ParentId =", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotEqualTo(Long value) {
            addCriterion("ParentId <>", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidGreaterThan(Long value) {
            addCriterion("ParentId >", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidGreaterThanOrEqualTo(Long value) {
            addCriterion("ParentId >=", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidLessThan(Long value) {
            addCriterion("ParentId <", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidLessThanOrEqualTo(Long value) {
            addCriterion("ParentId <=", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidIn(List<Long> values) {
            addCriterion("ParentId in", values, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotIn(List<Long> values) {
            addCriterion("ParentId not in", values, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidBetween(Long value1, Long value2) {
            addCriterion("ParentId between", value1, value2, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotBetween(Long value1, Long value2) {
            addCriterion("ParentId not between", value1, value2, "parentid");
            return (Criteria) this;
        }

        public Criteria andPositionnoIsNull() {
            addCriterion("PositionNo is null");
            return (Criteria) this;
        }

        public Criteria andPositionnoIsNotNull() {
            addCriterion("PositionNo is not null");
            return (Criteria) this;
        }

        public Criteria andPositionnoEqualTo(String value) {
            addCriterion("PositionNo =", value, "positionno");
            return (Criteria) this;
        }

        public Criteria andPositionnoNotEqualTo(String value) {
            addCriterion("PositionNo <>", value, "positionno");
            return (Criteria) this;
        }

        public Criteria andPositionnoGreaterThan(String value) {
            addCriterion("PositionNo >", value, "positionno");
            return (Criteria) this;
        }

        public Criteria andPositionnoGreaterThanOrEqualTo(String value) {
            addCriterion("PositionNo >=", value, "positionno");
            return (Criteria) this;
        }

        public Criteria andPositionnoLessThan(String value) {
            addCriterion("PositionNo <", value, "positionno");
            return (Criteria) this;
        }

        public Criteria andPositionnoLessThanOrEqualTo(String value) {
            addCriterion("PositionNo <=", value, "positionno");
            return (Criteria) this;
        }

        public Criteria andPositionnoLike(String value) {
            addCriterion("PositionNo like", value, "positionno");
            return (Criteria) this;
        }

        public Criteria andPositionnoNotLike(String value) {
            addCriterion("PositionNo not like", value, "positionno");
            return (Criteria) this;
        }

        public Criteria andPositionnoIn(List<String> values) {
            addCriterion("PositionNo in", values, "positionno");
            return (Criteria) this;
        }

        public Criteria andPositionnoNotIn(List<String> values) {
            addCriterion("PositionNo not in", values, "positionno");
            return (Criteria) this;
        }

        public Criteria andPositionnoBetween(String value1, String value2) {
            addCriterion("PositionNo between", value1, value2, "positionno");
            return (Criteria) this;
        }

        public Criteria andPositionnoNotBetween(String value1, String value2) {
            addCriterion("PositionNo not between", value1, value2, "positionno");
            return (Criteria) this;
        }

        public Criteria andPositionnameIsNull() {
            addCriterion("PositionName is null");
            return (Criteria) this;
        }

        public Criteria andPositionnameIsNotNull() {
            addCriterion("PositionName is not null");
            return (Criteria) this;
        }

        public Criteria andPositionnameEqualTo(String value) {
            addCriterion("PositionName =", value, "positionname");
            return (Criteria) this;
        }

        public Criteria andPositionnameNotEqualTo(String value) {
            addCriterion("PositionName <>", value, "positionname");
            return (Criteria) this;
        }

        public Criteria andPositionnameGreaterThan(String value) {
            addCriterion("PositionName >", value, "positionname");
            return (Criteria) this;
        }

        public Criteria andPositionnameGreaterThanOrEqualTo(String value) {
            addCriterion("PositionName >=", value, "positionname");
            return (Criteria) this;
        }

        public Criteria andPositionnameLessThan(String value) {
            addCriterion("PositionName <", value, "positionname");
            return (Criteria) this;
        }

        public Criteria andPositionnameLessThanOrEqualTo(String value) {
            addCriterion("PositionName <=", value, "positionname");
            return (Criteria) this;
        }

        public Criteria andPositionnameLike(String value) {
            addCriterion("PositionName like", value, "positionname");
            return (Criteria) this;
        }

        public Criteria andPositionnameNotLike(String value) {
            addCriterion("PositionName not like", value, "positionname");
            return (Criteria) this;
        }

        public Criteria andPositionnameIn(List<String> values) {
            addCriterion("PositionName in", values, "positionname");
            return (Criteria) this;
        }

        public Criteria andPositionnameNotIn(List<String> values) {
            addCriterion("PositionName not in", values, "positionname");
            return (Criteria) this;
        }

        public Criteria andPositionnameBetween(String value1, String value2) {
            addCriterion("PositionName between", value1, value2, "positionname");
            return (Criteria) this;
        }

        public Criteria andPositionnameNotBetween(String value1, String value2) {
            addCriterion("PositionName not between", value1, value2, "positionname");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameIsNull() {
            addCriterion("EstateBriefName is null");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameIsNotNull() {
            addCriterion("EstateBriefName is not null");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameEqualTo(String value) {
            addCriterion("EstateBriefName =", value, "estatebriefname");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameNotEqualTo(String value) {
            addCriterion("EstateBriefName <>", value, "estatebriefname");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameGreaterThan(String value) {
            addCriterion("EstateBriefName >", value, "estatebriefname");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameGreaterThanOrEqualTo(String value) {
            addCriterion("EstateBriefName >=", value, "estatebriefname");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameLessThan(String value) {
            addCriterion("EstateBriefName <", value, "estatebriefname");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameLessThanOrEqualTo(String value) {
            addCriterion("EstateBriefName <=", value, "estatebriefname");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameLike(String value) {
            addCriterion("EstateBriefName like", value, "estatebriefname");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameNotLike(String value) {
            addCriterion("EstateBriefName not like", value, "estatebriefname");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameIn(List<String> values) {
            addCriterion("EstateBriefName in", values, "estatebriefname");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameNotIn(List<String> values) {
            addCriterion("EstateBriefName not in", values, "estatebriefname");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameBetween(String value1, String value2) {
            addCriterion("EstateBriefName between", value1, value2, "estatebriefname");
            return (Criteria) this;
        }

        public Criteria andEstatebriefnameNotBetween(String value1, String value2) {
            addCriterion("EstateBriefName not between", value1, value2, "estatebriefname");
            return (Criteria) this;
        }

        public Criteria andEstateaddressIsNull() {
            addCriterion("EstateAddress is null");
            return (Criteria) this;
        }

        public Criteria andEstateaddressIsNotNull() {
            addCriterion("EstateAddress is not null");
            return (Criteria) this;
        }

        public Criteria andEstateaddressEqualTo(String value) {
            addCriterion("EstateAddress =", value, "estateaddress");
            return (Criteria) this;
        }

        public Criteria andEstateaddressNotEqualTo(String value) {
            addCriterion("EstateAddress <>", value, "estateaddress");
            return (Criteria) this;
        }

        public Criteria andEstateaddressGreaterThan(String value) {
            addCriterion("EstateAddress >", value, "estateaddress");
            return (Criteria) this;
        }

        public Criteria andEstateaddressGreaterThanOrEqualTo(String value) {
            addCriterion("EstateAddress >=", value, "estateaddress");
            return (Criteria) this;
        }

        public Criteria andEstateaddressLessThan(String value) {
            addCriterion("EstateAddress <", value, "estateaddress");
            return (Criteria) this;
        }

        public Criteria andEstateaddressLessThanOrEqualTo(String value) {
            addCriterion("EstateAddress <=", value, "estateaddress");
            return (Criteria) this;
        }

        public Criteria andEstateaddressLike(String value) {
            addCriterion("EstateAddress like", value, "estateaddress");
            return (Criteria) this;
        }

        public Criteria andEstateaddressNotLike(String value) {
            addCriterion("EstateAddress not like", value, "estateaddress");
            return (Criteria) this;
        }

        public Criteria andEstateaddressIn(List<String> values) {
            addCriterion("EstateAddress in", values, "estateaddress");
            return (Criteria) this;
        }

        public Criteria andEstateaddressNotIn(List<String> values) {
            addCriterion("EstateAddress not in", values, "estateaddress");
            return (Criteria) this;
        }

        public Criteria andEstateaddressBetween(String value1, String value2) {
            addCriterion("EstateAddress between", value1, value2, "estateaddress");
            return (Criteria) this;
        }

        public Criteria andEstateaddressNotBetween(String value1, String value2) {
            addCriterion("EstateAddress not between", value1, value2, "estateaddress");
            return (Criteria) this;
        }

        public Criteria andTypeflagIsNull() {
            addCriterion("TypeFlag is null");
            return (Criteria) this;
        }

        public Criteria andTypeflagIsNotNull() {
            addCriterion("TypeFlag is not null");
            return (Criteria) this;
        }

        public Criteria andTypeflagEqualTo(Byte value) {
            addCriterion("TypeFlag =", value, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagNotEqualTo(Byte value) {
            addCriterion("TypeFlag <>", value, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagGreaterThan(Byte value) {
            addCriterion("TypeFlag >", value, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagGreaterThanOrEqualTo(Byte value) {
            addCriterion("TypeFlag >=", value, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagLessThan(Byte value) {
            addCriterion("TypeFlag <", value, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagLessThanOrEqualTo(Byte value) {
            addCriterion("TypeFlag <=", value, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagIn(List<Byte> values) {
            addCriterion("TypeFlag in", values, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagNotIn(List<Byte> values) {
            addCriterion("TypeFlag not in", values, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagBetween(Byte value1, Byte value2) {
            addCriterion("TypeFlag between", value1, value2, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagNotBetween(Byte value1, Byte value2) {
            addCriterion("TypeFlag not between", value1, value2, "typeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagIsNull() {
            addCriterion("ActiveFlag is null");
            return (Criteria) this;
        }

        public Criteria andActiveflagIsNotNull() {
            addCriterion("ActiveFlag is not null");
            return (Criteria) this;
        }

        public Criteria andActiveflagEqualTo(Byte value) {
            addCriterion("ActiveFlag =", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagNotEqualTo(Byte value) {
            addCriterion("ActiveFlag <>", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagGreaterThan(Byte value) {
            addCriterion("ActiveFlag >", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagGreaterThanOrEqualTo(Byte value) {
            addCriterion("ActiveFlag >=", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagLessThan(Byte value) {
            addCriterion("ActiveFlag <", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagLessThanOrEqualTo(Byte value) {
            addCriterion("ActiveFlag <=", value, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagIn(List<Byte> values) {
            addCriterion("ActiveFlag in", values, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagNotIn(List<Byte> values) {
            addCriterion("ActiveFlag not in", values, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagBetween(Byte value1, Byte value2) {
            addCriterion("ActiveFlag between", value1, value2, "activeflag");
            return (Criteria) this;
        }

        public Criteria andActiveflagNotBetween(Byte value1, Byte value2) {
            addCriterion("ActiveFlag not between", value1, value2, "activeflag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Basisposition
     *
     * @mbggenerated do_not_delete_during_merge Tue Mar 03 20:50:18 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Basisposition
     *
     * @mbggenerated Tue Mar 03 20:50:18 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}