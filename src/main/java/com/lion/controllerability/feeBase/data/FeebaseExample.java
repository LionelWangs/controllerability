package com.lion.controllerability.feeBase.data;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class FeebaseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    public FeebaseExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFeeidIsNull() {
            addCriterion("FeeId is null");
            return (Criteria) this;
        }

        public Criteria andFeeidIsNotNull() {
            addCriterion("FeeId is not null");
            return (Criteria) this;
        }

        public Criteria andFeeidEqualTo(Long value) {
            addCriterion("FeeId =", value, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidNotEqualTo(Long value) {
            addCriterion("FeeId <>", value, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidGreaterThan(Long value) {
            addCriterion("FeeId >", value, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidGreaterThanOrEqualTo(Long value) {
            addCriterion("FeeId >=", value, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidLessThan(Long value) {
            addCriterion("FeeId <", value, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidLessThanOrEqualTo(Long value) {
            addCriterion("FeeId <=", value, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidIn(List<Long> values) {
            addCriterion("FeeId in", values, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidNotIn(List<Long> values) {
            addCriterion("FeeId not in", values, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidBetween(Long value1, Long value2) {
            addCriterion("FeeId between", value1, value2, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidNotBetween(Long value1, Long value2) {
            addCriterion("FeeId not between", value1, value2, "feeid");
            return (Criteria) this;
        }

        public Criteria andMerchantnoIsNull() {
            addCriterion("MerchantNo is null");
            return (Criteria) this;
        }

        public Criteria andMerchantnoIsNotNull() {
            addCriterion("MerchantNo is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantnoEqualTo(String value) {
            addCriterion("MerchantNo =", value, "merchantno");
            return (Criteria) this;
        }

        public Criteria andMerchantnoNotEqualTo(String value) {
            addCriterion("MerchantNo <>", value, "merchantno");
            return (Criteria) this;
        }

        public Criteria andMerchantnoGreaterThan(String value) {
            addCriterion("MerchantNo >", value, "merchantno");
            return (Criteria) this;
        }

        public Criteria andMerchantnoGreaterThanOrEqualTo(String value) {
            addCriterion("MerchantNo >=", value, "merchantno");
            return (Criteria) this;
        }

        public Criteria andMerchantnoLessThan(String value) {
            addCriterion("MerchantNo <", value, "merchantno");
            return (Criteria) this;
        }

        public Criteria andMerchantnoLessThanOrEqualTo(String value) {
            addCriterion("MerchantNo <=", value, "merchantno");
            return (Criteria) this;
        }

        public Criteria andMerchantnoLike(String value) {
            addCriterion("MerchantNo like", value, "merchantno");
            return (Criteria) this;
        }

        public Criteria andMerchantnoNotLike(String value) {
            addCriterion("MerchantNo not like", value, "merchantno");
            return (Criteria) this;
        }

        public Criteria andMerchantnoIn(List<String> values) {
            addCriterion("MerchantNo in", values, "merchantno");
            return (Criteria) this;
        }

        public Criteria andMerchantnoNotIn(List<String> values) {
            addCriterion("MerchantNo not in", values, "merchantno");
            return (Criteria) this;
        }

        public Criteria andMerchantnoBetween(String value1, String value2) {
            addCriterion("MerchantNo between", value1, value2, "merchantno");
            return (Criteria) this;
        }

        public Criteria andMerchantnoNotBetween(String value1, String value2) {
            addCriterion("MerchantNo not between", value1, value2, "merchantno");
            return (Criteria) this;
        }

        public Criteria andMeteridIsNull() {
            addCriterion("MeterId is null");
            return (Criteria) this;
        }

        public Criteria andMeteridIsNotNull() {
            addCriterion("MeterId is not null");
            return (Criteria) this;
        }

        public Criteria andMeteridEqualTo(Long value) {
            addCriterion("MeterId =", value, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridNotEqualTo(Long value) {
            addCriterion("MeterId <>", value, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridGreaterThan(Long value) {
            addCriterion("MeterId >", value, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridGreaterThanOrEqualTo(Long value) {
            addCriterion("MeterId >=", value, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridLessThan(Long value) {
            addCriterion("MeterId <", value, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridLessThanOrEqualTo(Long value) {
            addCriterion("MeterId <=", value, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridIn(List<Long> values) {
            addCriterion("MeterId in", values, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridNotIn(List<Long> values) {
            addCriterion("MeterId not in", values, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridBetween(Long value1, Long value2) {
            addCriterion("MeterId between", value1, value2, "meterid");
            return (Criteria) this;
        }

        public Criteria andMeteridNotBetween(Long value1, Long value2) {
            addCriterion("MeterId not between", value1, value2, "meterid");
            return (Criteria) this;
        }

        public Criteria andAccountidIsNull() {
            addCriterion("AccountId is null");
            return (Criteria) this;
        }

        public Criteria andAccountidIsNotNull() {
            addCriterion("AccountId is not null");
            return (Criteria) this;
        }

        public Criteria andAccountidEqualTo(Long value) {
            addCriterion("AccountId =", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidNotEqualTo(Long value) {
            addCriterion("AccountId <>", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidGreaterThan(Long value) {
            addCriterion("AccountId >", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidGreaterThanOrEqualTo(Long value) {
            addCriterion("AccountId >=", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidLessThan(Long value) {
            addCriterion("AccountId <", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidLessThanOrEqualTo(Long value) {
            addCriterion("AccountId <=", value, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidIn(List<Long> values) {
            addCriterion("AccountId in", values, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidNotIn(List<Long> values) {
            addCriterion("AccountId not in", values, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidBetween(Long value1, Long value2) {
            addCriterion("AccountId between", value1, value2, "accountid");
            return (Criteria) this;
        }

        public Criteria andAccountidNotBetween(Long value1, Long value2) {
            addCriterion("AccountId not between", value1, value2, "accountid");
            return (Criteria) this;
        }

        public Criteria andFeenameIsNull() {
            addCriterion("FeeName is null");
            return (Criteria) this;
        }

        public Criteria andFeenameIsNotNull() {
            addCriterion("FeeName is not null");
            return (Criteria) this;
        }

        public Criteria andFeenameEqualTo(String value) {
            addCriterion("FeeName =", value, "feename");
            return (Criteria) this;
        }

        public Criteria andFeenameNotEqualTo(String value) {
            addCriterion("FeeName <>", value, "feename");
            return (Criteria) this;
        }

        public Criteria andFeenameGreaterThan(String value) {
            addCriterion("FeeName >", value, "feename");
            return (Criteria) this;
        }

        public Criteria andFeenameGreaterThanOrEqualTo(String value) {
            addCriterion("FeeName >=", value, "feename");
            return (Criteria) this;
        }

        public Criteria andFeenameLessThan(String value) {
            addCriterion("FeeName <", value, "feename");
            return (Criteria) this;
        }

        public Criteria andFeenameLessThanOrEqualTo(String value) {
            addCriterion("FeeName <=", value, "feename");
            return (Criteria) this;
        }

        public Criteria andFeenameLike(String value) {
            addCriterion("FeeName like", value, "feename");
            return (Criteria) this;
        }

        public Criteria andFeenameNotLike(String value) {
            addCriterion("FeeName not like", value, "feename");
            return (Criteria) this;
        }

        public Criteria andFeenameIn(List<String> values) {
            addCriterion("FeeName in", values, "feename");
            return (Criteria) this;
        }

        public Criteria andFeenameNotIn(List<String> values) {
            addCriterion("FeeName not in", values, "feename");
            return (Criteria) this;
        }

        public Criteria andFeenameBetween(String value1, String value2) {
            addCriterion("FeeName between", value1, value2, "feename");
            return (Criteria) this;
        }

        public Criteria andFeenameNotBetween(String value1, String value2) {
            addCriterion("FeeName not between", value1, value2, "feename");
            return (Criteria) this;
        }

        public Criteria andFeeamountIsNull() {
            addCriterion("FeeAmount is null");
            return (Criteria) this;
        }

        public Criteria andFeeamountIsNotNull() {
            addCriterion("FeeAmount is not null");
            return (Criteria) this;
        }

        public Criteria andFeeamountEqualTo(Long value) {
            addCriterion("FeeAmount =", value, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountNotEqualTo(Long value) {
            addCriterion("FeeAmount <>", value, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountGreaterThan(Long value) {
            addCriterion("FeeAmount >", value, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountGreaterThanOrEqualTo(Long value) {
            addCriterion("FeeAmount >=", value, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountLessThan(Long value) {
            addCriterion("FeeAmount <", value, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountLessThanOrEqualTo(Long value) {
            addCriterion("FeeAmount <=", value, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountIn(List<Long> values) {
            addCriterion("FeeAmount in", values, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountNotIn(List<Long> values) {
            addCriterion("FeeAmount not in", values, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountBetween(Long value1, Long value2) {
            addCriterion("FeeAmount between", value1, value2, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountNotBetween(Long value1, Long value2) {
            addCriterion("FeeAmount not between", value1, value2, "feeamount");
            return (Criteria) this;
        }

        public Criteria andStatusflagIsNull() {
            addCriterion("StatusFlag is null");
            return (Criteria) this;
        }

        public Criteria andStatusflagIsNotNull() {
            addCriterion("StatusFlag is not null");
            return (Criteria) this;
        }

        public Criteria andStatusflagEqualTo(Byte value) {
            addCriterion("StatusFlag =", value, "statusflag");
            return (Criteria) this;
        }

        public Criteria andStatusflagNotEqualTo(Byte value) {
            addCriterion("StatusFlag <>", value, "statusflag");
            return (Criteria) this;
        }

        public Criteria andStatusflagGreaterThan(Byte value) {
            addCriterion("StatusFlag >", value, "statusflag");
            return (Criteria) this;
        }

        public Criteria andStatusflagGreaterThanOrEqualTo(Byte value) {
            addCriterion("StatusFlag >=", value, "statusflag");
            return (Criteria) this;
        }

        public Criteria andStatusflagLessThan(Byte value) {
            addCriterion("StatusFlag <", value, "statusflag");
            return (Criteria) this;
        }

        public Criteria andStatusflagLessThanOrEqualTo(Byte value) {
            addCriterion("StatusFlag <=", value, "statusflag");
            return (Criteria) this;
        }

        public Criteria andStatusflagIn(List<Byte> values) {
            addCriterion("StatusFlag in", values, "statusflag");
            return (Criteria) this;
        }

        public Criteria andStatusflagNotIn(List<Byte> values) {
            addCriterion("StatusFlag not in", values, "statusflag");
            return (Criteria) this;
        }

        public Criteria andStatusflagBetween(Byte value1, Byte value2) {
            addCriterion("StatusFlag between", value1, value2, "statusflag");
            return (Criteria) this;
        }

        public Criteria andStatusflagNotBetween(Byte value1, Byte value2) {
            addCriterion("StatusFlag not between", value1, value2, "statusflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagIsNull() {
            addCriterion("TypeFlag is null");
            return (Criteria) this;
        }

        public Criteria andTypeflagIsNotNull() {
            addCriterion("TypeFlag is not null");
            return (Criteria) this;
        }

        public Criteria andTypeflagEqualTo(Byte value) {
            addCriterion("TypeFlag =", value, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagNotEqualTo(Byte value) {
            addCriterion("TypeFlag <>", value, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagGreaterThan(Byte value) {
            addCriterion("TypeFlag >", value, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagGreaterThanOrEqualTo(Byte value) {
            addCriterion("TypeFlag >=", value, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagLessThan(Byte value) {
            addCriterion("TypeFlag <", value, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagLessThanOrEqualTo(Byte value) {
            addCriterion("TypeFlag <=", value, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagIn(List<Byte> values) {
            addCriterion("TypeFlag in", values, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagNotIn(List<Byte> values) {
            addCriterion("TypeFlag not in", values, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagBetween(Byte value1, Byte value2) {
            addCriterion("TypeFlag between", value1, value2, "typeflag");
            return (Criteria) this;
        }

        public Criteria andTypeflagNotBetween(Byte value1, Byte value2) {
            addCriterion("TypeFlag not between", value1, value2, "typeflag");
            return (Criteria) this;
        }

        public Criteria andPayaccountIsNull() {
            addCriterion("PayAccount is null");
            return (Criteria) this;
        }

        public Criteria andPayaccountIsNotNull() {
            addCriterion("PayAccount is not null");
            return (Criteria) this;
        }

        public Criteria andPayaccountEqualTo(String value) {
            addCriterion("PayAccount =", value, "payaccount");
            return (Criteria) this;
        }

        public Criteria andPayaccountNotEqualTo(String value) {
            addCriterion("PayAccount <>", value, "payaccount");
            return (Criteria) this;
        }

        public Criteria andPayaccountGreaterThan(String value) {
            addCriterion("PayAccount >", value, "payaccount");
            return (Criteria) this;
        }

        public Criteria andPayaccountGreaterThanOrEqualTo(String value) {
            addCriterion("PayAccount >=", value, "payaccount");
            return (Criteria) this;
        }

        public Criteria andPayaccountLessThan(String value) {
            addCriterion("PayAccount <", value, "payaccount");
            return (Criteria) this;
        }

        public Criteria andPayaccountLessThanOrEqualTo(String value) {
            addCriterion("PayAccount <=", value, "payaccount");
            return (Criteria) this;
        }

        public Criteria andPayaccountLike(String value) {
            addCriterion("PayAccount like", value, "payaccount");
            return (Criteria) this;
        }

        public Criteria andPayaccountNotLike(String value) {
            addCriterion("PayAccount not like", value, "payaccount");
            return (Criteria) this;
        }

        public Criteria andPayaccountIn(List<String> values) {
            addCriterion("PayAccount in", values, "payaccount");
            return (Criteria) this;
        }

        public Criteria andPayaccountNotIn(List<String> values) {
            addCriterion("PayAccount not in", values, "payaccount");
            return (Criteria) this;
        }

        public Criteria andPayaccountBetween(String value1, String value2) {
            addCriterion("PayAccount between", value1, value2, "payaccount");
            return (Criteria) this;
        }

        public Criteria andPayaccountNotBetween(String value1, String value2) {
            addCriterion("PayAccount not between", value1, value2, "payaccount");
            return (Criteria) this;
        }

        public Criteria andPaytimeIsNull() {
            addCriterion("PayTime is null");
            return (Criteria) this;
        }

        public Criteria andPaytimeIsNotNull() {
            addCriterion("PayTime is not null");
            return (Criteria) this;
        }

        public Criteria andPaytimeEqualTo(Date value) {
            addCriterion("PayTime =", value, "paytime");
            return (Criteria) this;
        }

        public Criteria andPaytimeNotEqualTo(Date value) {
            addCriterion("PayTime <>", value, "paytime");
            return (Criteria) this;
        }

        public Criteria andPaytimeGreaterThan(Date value) {
            addCriterion("PayTime >", value, "paytime");
            return (Criteria) this;
        }

        public Criteria andPaytimeGreaterThanOrEqualTo(Date value) {
            addCriterion("PayTime >=", value, "paytime");
            return (Criteria) this;
        }

        public Criteria andPaytimeLessThan(Date value) {
            addCriterion("PayTime <", value, "paytime");
            return (Criteria) this;
        }

        public Criteria andPaytimeLessThanOrEqualTo(Date value) {
            addCriterion("PayTime <=", value, "paytime");
            return (Criteria) this;
        }

        public Criteria andPaytimeIn(List<Date> values) {
            addCriterion("PayTime in", values, "paytime");
            return (Criteria) this;
        }

        public Criteria andPaytimeNotIn(List<Date> values) {
            addCriterion("PayTime not in", values, "paytime");
            return (Criteria) this;
        }

        public Criteria andPaytimeBetween(Date value1, Date value2) {
            addCriterion("PayTime between", value1, value2, "paytime");
            return (Criteria) this;
        }

        public Criteria andPaytimeNotBetween(Date value1, Date value2) {
            addCriterion("PayTime not between", value1, value2, "paytime");
            return (Criteria) this;
        }

        public Criteria andTransnoIsNull() {
            addCriterion("TransNo is null");
            return (Criteria) this;
        }

        public Criteria andTransnoIsNotNull() {
            addCriterion("TransNo is not null");
            return (Criteria) this;
        }

        public Criteria andTransnoEqualTo(String value) {
            addCriterion("TransNo =", value, "transno");
            return (Criteria) this;
        }

        public Criteria andTransnoNotEqualTo(String value) {
            addCriterion("TransNo <>", value, "transno");
            return (Criteria) this;
        }

        public Criteria andTransnoGreaterThan(String value) {
            addCriterion("TransNo >", value, "transno");
            return (Criteria) this;
        }

        public Criteria andTransnoGreaterThanOrEqualTo(String value) {
            addCriterion("TransNo >=", value, "transno");
            return (Criteria) this;
        }

        public Criteria andTransnoLessThan(String value) {
            addCriterion("TransNo <", value, "transno");
            return (Criteria) this;
        }

        public Criteria andTransnoLessThanOrEqualTo(String value) {
            addCriterion("TransNo <=", value, "transno");
            return (Criteria) this;
        }

        public Criteria andTransnoLike(String value) {
            addCriterion("TransNo like", value, "transno");
            return (Criteria) this;
        }

        public Criteria andTransnoNotLike(String value) {
            addCriterion("TransNo not like", value, "transno");
            return (Criteria) this;
        }

        public Criteria andTransnoIn(List<String> values) {
            addCriterion("TransNo in", values, "transno");
            return (Criteria) this;
        }

        public Criteria andTransnoNotIn(List<String> values) {
            addCriterion("TransNo not in", values, "transno");
            return (Criteria) this;
        }

        public Criteria andTransnoBetween(String value1, String value2) {
            addCriterion("TransNo between", value1, value2, "transno");
            return (Criteria) this;
        }

        public Criteria andTransnoNotBetween(String value1, String value2) {
            addCriterion("TransNo not between", value1, value2, "transno");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FeeBase
     *
     * @mbggenerated do_not_delete_during_merge Wed Mar 18 12:33:09 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FeeBase
     *
     * @mbggenerated Wed Mar 18 12:33:09 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}